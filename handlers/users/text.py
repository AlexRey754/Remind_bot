from loader import dp

from aiogram import types
from aiogram.dispatcher import FSMContext

from states import Request_reg
import keyboards
from utils.db_api import db

@dp.message_handler(content_types=['text'])
async def text_buttons_func(message: types.Message, state: FSMContext):
    # uid = message.from_user.id
    if message.text == '‚ûï–î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É':
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–º–µ—Ç–∫–∏', reply_markup=keyboards.default.cancel)
        await Request_reg.header.set()

    elif message.text == 'ü§ö–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–º–µ—Ç–∫–∏':
        uid = message.from_user.id
        text = db.get_notes(uid)
        await message.answer(text,reply_markup=keyboards.default.menu)

    elif message.text == 'üóí–°–ø–∏—Å–æ–∫':
        text = db.get_data()
        await message.answer(text)

    elif message.text.startswith('/del'):
        row_id = int(message.text[4:])
        uid = message.from_user.id
        try:
            db.del_note(uid,row_id)
            await message.answer("–£–¥–∞–ª–∏–ª")
        except:
            await message.answer("–í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –∑–∞–º–µ—Ç–∫–∏")


